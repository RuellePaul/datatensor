version: '3.7'

services:
  api:
    image: docker.pkg.github.com/ruellepaul/datatensor/datatensor-api:${VERSION}
    environment:
      - 'ENVIRONMENT=${ENVIRONMENT}'
      - 'DB_ENCRYPTION_KEY=${DB_ENCRYPTION_KEY}'
      - 'FLASK_SECRET_KEY=${FLASK_SECRET_KEY}'
      - 'ACCESS_TOKEN_KEY=${ACCESS_TOKEN_KEY}'
      - 'GOOGLE_CAPTCHA_SECRET_KEY=${GOOGLE_CAPTCHA_SECRET_KEY}'
      - 'SENDGRID_API_KEY=${SENDGRID_API_KEY}'
      - 'OAUTH_GITHUB_CLIENT_SECRET=${OAUTH_GITHUB_CLIENT_SECRET}'
      - 'OAUTH_GOOGLE_CLIENT_SECRET=${OAUTH_GOOGLE_CLIENT_SECRET}'
      - 'OAUTH_STACKOVERFLOW_CLIENT_SECRET=${OAUTH_STACKOVERFLOW_CLIENT_SECRET}'
      - 'OAUTH_STACKOVERFLOW_KEY=${OAUTH_STACKOVERFLOW_KEY}'
      - 'S3_KEY=${S3_KEY}'
      - 'S3_SECRET=${S3_SECRET}'
    build:
      context: ../
      dockerfile: Dockerfile-api
    volumes:
      - './${ENVIRONMENT}/config.py:/api/config.py'
    network_mode: host
  db:
    image: mongo
    network_mode: host
  proxy:
    build:
      context: proxy
    network_mode: host
    volumes:
      - '/root/letsencrypt:/etc/letsencrypt'
  ux:
    image: docker.pkg.github.com/ruellepaul/datatensor/datatensor-ux:${VERSION}_${ENVIRONMENT}
    build:
      args:
        - 'ENVIRONMENT=${ENVIRONMENT}'
      context: ../
      dockerfile: Dockerfile-ux
    volumes:
      - './${ENVIRONMENT}/cert.pem:/ux/server/cert.pem'
      - './${ENVIRONMENT}/key.pem:/ux/server/key.pem'
      - '/ux/node_modules'
    network_mode: host
