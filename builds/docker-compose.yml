version: '3.7'

services:

  api:
    image: docker.pkg.github.com/ruellepaul/datatensor/datatensor-api:${VERSION}
    environment:
      - 'ENVIRONMENT=${ENVIRONMENT}'
      - 'DB_ENCRYPTION_KEY=${DB_ENCRYPTION_KEY}'
      - 'ACCESS_TOKEN_KEY=${ACCESS_TOKEN_KEY}'
      - 'GOOGLE_CAPTCHA_SECRET_KEY=${GOOGLE_CAPTCHA_SECRET_KEY}'
      - 'SENDGRID_API_KEY=${SENDGRID_API_KEY}'
      - 'OAUTH_GITHUB_CLIENT_SECRET=${OAUTH_GITHUB_CLIENT_SECRET}'
      - 'OAUTH_GOOGLE_CLIENT_SECRET=${OAUTH_GOOGLE_CLIENT_SECRET}'
      - 'OAUTH_STACKOVERFLOW_CLIENT_SECRET=${OAUTH_STACKOVERFLOW_CLIENT_SECRET}'
      - 'OAUTH_STACKOVERFLOW_KEY=${OAUTH_STACKOVERFLOW_KEY}'
      - 'S3_KEY=${S3_KEY}'
      - 'S3_SECRET=${S3_SECRET}'
    build:
      context: ../
      dockerfile: Dockerfile-api
    volumes:
      - './${ENVIRONMENT}/config.py:/api/config.py'
    ports:
      - '4069:4069'
    networks:
      - datatensor_network
    extra_hosts:
      - 'host.docker.internal:host-gateway'


  celery:
    image: docker.pkg.github.com/ruellepaul/datatensor/datatensor-celery:${VERSION}
    build:
      context: ../
      dockerfile: Dockerfile-celery
    environment:
      - 'ENVIRONMENT=${ENVIRONMENT}'
      - 'DB_ENCRYPTION_KEY=${DB_ENCRYPTION_KEY}'
      - 'ACCESS_TOKEN_KEY=${ACCESS_TOKEN_KEY}'
      - 'GOOGLE_CAPTCHA_SECRET_KEY=${GOOGLE_CAPTCHA_SECRET_KEY}'
      - 'SENDGRID_API_KEY=${SENDGRID_API_KEY}'
      - 'OAUTH_GITHUB_CLIENT_SECRET=${OAUTH_GITHUB_CLIENT_SECRET}'
      - 'OAUTH_GOOGLE_CLIENT_SECRET=${OAUTH_GOOGLE_CLIENT_SECRET}'
      - 'OAUTH_STACKOVERFLOW_CLIENT_SECRET=${OAUTH_STACKOVERFLOW_CLIENT_SECRET}'
      - 'OAUTH_STACKOVERFLOW_KEY=${OAUTH_STACKOVERFLOW_KEY}'
      - 'S3_KEY=${S3_KEY}'
      - 'S3_SECRET=${S3_SECRET}'
    ports:
      - '6379:6379'
    networks:
      - datatensor_network
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    depends_on:
      - api
    restart: on-failure


  db:
    image: mongo
    ports:
      - '27017:27017'
    networks:
      - datatensor_network
    extra_hosts:
      - 'host.docker.internal:host-gateway'


  proxy:
    build:
      context: proxy
    volumes:
      - '/root/letsencrypt:/etc/letsencrypt'
    ports:
      # - '80:80'
      - '443:443'
    networks:
      - datatensor_network
    extra_hosts:
      - 'host.docker.internal:host-gateway'


  rabbitmq:
    image: rabbitmq:latest
    container_name: 'rabbitmq'
    ports:
      - '5672:5672'
    networks:
      - datatensor_network
    extra_hosts:
      - 'host.docker.internal:host-gateway'


  ux:
    image: docker.pkg.github.com/ruellepaul/datatensor/datatensor-ux:${VERSION}_${ENVIRONMENT}
    build:
      args:
        - 'ENVIRONMENT=${ENVIRONMENT}'
      context: ../
      dockerfile: Dockerfile-ux
    volumes:
      - '/ux/node_modules'
    ports:
      - '5069:5069'
    networks:
      - datatensor_network


networks:
  datatensor_network:
    driver: bridge
